plugins {
    id 'dev.architectury.loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name

loom {
    forge {
        mixinConfigs = [
                "spruceui.mixins.json"
        ]
    }
}

repositories {
    maven { url "https://maven.architectury.dev/" }
    maven { url 'https://aperlambda.github.io/maven' }
}

configurations {
    api.extendsFrom libApi
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    modApi "me.shedaniel:architectury-forge:${project.architectury_version}"

    libApi "org.jetbrains:annotations:20.1.0"
    libApi("org.aperlambda:lambdajcommon:1.8.1") {
        exclude group: 'com.google.code.gson'
        exclude group: 'com.google.guava'
    }
    include "org.aperlambda:lambdajcommon:1.8.1"

}

java {
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    if (JavaVersion.current().isJava9Compatible()) {
        if (JavaVersion.current().isJava9Compatible()) {
            it.options.release.set(8)
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        mavenLocal()
        maven {
            name = "BuildDirLocal"
            url = "$buildDir/repo"
        }
    }
}
