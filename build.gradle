plugins {
    //id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'java-library'
    id 'maven-publish'
    //id 'org.cadixdev.licenser' version '0.5.0'
    id 'dev.architectury.loom' version '0.10.0-SNAPSHOT'
}

group = project.maven_group
version = "${project.mod_version}+${getMCVersionString()}"
archivesBaseName = project.archives_base_name

loom {
    forge {
        mixinConfigs = [
                "${mod_id}.mixins.json"
        ]
    }
}

// This field defines the Java version your mod target.
// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too.
def targetJavaVersion = 8

Set<String> modules = [
        'fabric-api-base',
        'fabric-lifecycle-events-v1',
        'fabric-rendering-v1',
        'fabric-resource-loader-v0',
        'fabric-screen-api-v1'
]

def getMCVersionString() {
    if (project.minecraft_version.matches("\\d\\dw\\d\\d[a-z]")) {
        return project.minecraft_version
    }
    int lastDot = project.minecraft_version.lastIndexOf('.')
    return project.minecraft_version.substring(0, lastDot);
}

sourceSets {
}

minecraft {
}

repositories {
    mavenLocal()
    maven {
        name = "AperLambda"
        url = 'https://aperlambda.github.io/maven'
    }
}

configurations {
    api.extendsFrom libApi
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    //modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    modules.stream().map { fabricApi.module(it, project.fabric_api_version) }.forEach {
        modImplementation it
    }

    libApi "org.jetbrains:annotations:20.1.0"
    libApi("org.aperlambda:lambdajcommon:1.8.1") {
        exclude group: 'com.google.code.gson'
        exclude group: 'com.google.guava'
    }
    //include "org.aperlambda:lambdajcommon:1.8.1"

}

java {
    sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
    targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    if (JavaVersion.current().isJava9Compatible()) {
        if (JavaVersion.current().isJava9Compatible()) {
            it.options.release.set(targetJavaVersion)
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        mavenLocal()
        maven {
            name = "BuildDirLocal"
            url = "$buildDir/repo"
        }
    }
}
